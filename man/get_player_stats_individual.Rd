% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_player_stats_individual.R
\name{get_player_stats_individual}
\alias{get_player_stats_individual}
\title{Gets bio information and career statistics for specified player}
\usage{
get_player_stats_individual(..., .progress = TRUE,
  .strip_redundancy = TRUE)
}
\arguments{
\item{...}{Function requires a \code{player_url} and \code{name}. Additional data may be supplied. All of this information comes directly from \code{get_player_stats_team()} and \code{get_teams()} or \code{get_drafts()}, if desired.}

\item{.progress}{Sets a Progress Bar. Defaults to \code{TRUE}.}

\item{.strip_redundancy}{Removes variables \code{name_}, \code{player_url_}, and \code{position_}, as they're the same as \code{name}, \code{player_url}, and \code{position}. Defaults to \code{TRUE}.}
}
\description{
Returns a data frame of players, their bio information (age, birth place, etc.), and career statistics for user supplied player URLs and names.
}
\examples{

# The function works in conjunction with get_teams() and get_player_stats_team()
teams <- get_teams("ohl", "2017-2018")
stats_team <- get_player_stats_team(teams)
get_player_stats_individual(stats_team)

# The function also works in conjunction with get_drafts()
drafts <- get_drafts("nhl entry draft", "2018")
get_player_stats_individual(drafts)

# All functions are easily pipeable too
get_teams(c("shl", "allsvenskan"), c("2008-2009", "2009-2010", "2010-2011")) \%>\%
  get_player_stats_team(.progress = TRUE) \%>\%
  get_player_stats_individual(.strip_redundancy = FALSE)
  
# It's also easy to get player stats & bio information for only 1 team   
get_teams("ncaa iii", "2017-2018") \%>\%
  filter(team == "Hamilton College") \%>\%
  get_player_stats_team() \%>\%
  get_player_stats_individual()
  
# Once you have your data, use tidyr::unnest() to view players' career statistics
get_teams("ncaa iii", "2014-2015") \%>\%
  filter(team == "Hamilton College") \%>\%
  get_player_stats_team() \%>\%
  get_player_stats_individual() \%>\%
  tidyr::unnest(player_statistics)
  
}
