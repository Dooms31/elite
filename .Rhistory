mutate(player_url_ = player_url) %>%
mutate_all(~str_trim(., side = "both")) %>%
mutate_all(~na_if(., "-")) %>%
select(-c(feet_tall, inches_tall, age, youth_team))
player_stats <- page %>%
html_node('[class="table table-striped table-condensed table-sortable player-stats highlight-stats"]') %>%
html_table() %>%
set_names("season_", "team_", "league_", "games_played_", "goals_", "assists_", "points_", "penalty_minutes_", "plus_minus_", "blank_", "playoffs_", "games_played_playoffs_", "goals_playoffs_", "assists_playoffs_", "points_playoffs_", "penalty_minutes_playoffs_", "plus_minus_playoffs_") %>%
as_tibble() %>%
mutate_all(~na_if(., "-")) %>%
mutate(season_ = replace(season_, season_ == "", NA)) %>%
fill(season_) %>%
mutate(season_short_ = as.numeric(str_split(season_, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(birthday = as_date(vitals[["birthday"]])) %>%
mutate(draft_eligibility_date_ = as_date(str_c(as.character(as.numeric(season_short_) - 1), "09-15", sep = "-"))) %>%
mutate(age_ = get_years_difference(birthday, draft_eligibility_date_)) %>%
mutate_all(as.character) %>%
select(-c(blank_, playoffs_, draft_eligibility_date_, birthday)) %>%
select(team_, league_, season_, season_short_, age_, games_played_, goals_, assists_, points_, penalty_minutes_, plus_minus_, games_played_playoffs_, goals_playoffs_, assists_playoffs_, points_playoffs_, penalty_minutes_playoffs_, plus_minus_playoffs_) %>%
nest()
all_data <- vitals %>%
bind_cols(player_stats) %>%
rename(player_statistics = data)
return(all_data)
})
mydata <- player_stats_individual %>%
bind_cols(...) %>%
mutate(season_short = as.numeric(str_split(season, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(draft_eligibility_date = as_date(str_c(as.character(as.numeric(season_short) - 1), "09-15", sep = "-"))) %>%
mutate(age = get_years_difference(as_date(birthday), draft_eligibility_date)) %>%
select(name, team, league, position, shot_handedness, birth_place, birth_country, birthday, height, weight, season, season_short, age, games_played, goals, assists, points, penalty_minutes, plus_minus, games_played_playoffs, goals_playoffs, assists_playoffs, points_playoffs, penalty_minutes_playoffs, plus_minus_playoffs, player_url, team_url, name_, position_, player_url_, player_statistics)
if (.strip_redundancy) {mydata <- mydata %>% select(-c(name_, position_, player_url_))}
return(mydata)
}
rm(list=ls())
get_league_team_data <- function(.league, .season, .progress = FALSE, ...) {
leagues <- .league %>%
as_tibble() %>%
set_names(".league") %>%
mutate(.league = str_replace_all(.league, " ", "-"))
seasons <- .season %>%
as_tibble() %>%
set_names(".season")
mydata <- tidyr::crossing(leagues, seasons)
if (.progress) {progress_bar <- progress_estimated(nrow(mydata), min_time = 0)}
league_team_data <- map2_dfr(mydata[[".league"]], mydata[[".season"]], function(.league, .season, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- str_c("https://www.eliteprospects.com/league/", .league, "/", .season) %>% read_html()
team_url <- page %>%
html_nodes("#standings .team a") %>%
html_attr("href") %>%
str_c(., "?tab=stats") %>%
as_tibble() %>%
set_names("team_url")
team <- page %>%
html_nodes("#standings .team a") %>%
html_text() %>%
str_trim(side = "both") %>%
as_tibble() %>%
set_names("team")
league <- page %>%
html_nodes("small") %>%
html_text() %>%
str_trim(side = "both")
season <- str_split(.season, "-", simplify = TRUE, n = 2)[,2] %>%
str_sub(3, 4) %>%
str_c(str_split(.season, "-", simplify = TRUE, n = 2)[,1], ., sep = "-")
all_data <- team %>%
bind_cols(team_url) %>%
mutate(league = league) %>%
mutate(season = season)
return(all_data)
})
return(league_team_data)
}
get_player_stats_individual <- function(..., .progress = TRUE, .strip_redundancy = TRUE) {
if (.progress) {progress_bar <- progress_estimated(nrow(...), min_time = 0)}
player_stats_individual <- pmap_dfr(..., function(player_url, name, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- player_url %>% read_html()
vitals <- page %>%
html_nodes('[class="col-xs-8 fac-lbl-dark"]') %>%
html_text() %>%
magrittr::extract(1:9) %>%
str_squish() %>%
set_names("birthday", "age", "birth_place", "birth_country", "youth_team", "position_", "height", "weight", "shot_handedness") %>%
t() %>%
as_tibble() %>%
mutate(birthday = mdy(birthday)) %>%
mutate(height = str_split(height, '"', simplify = TRUE, n = 2)[,1]) %>%
mutate(feet_tall = str_split(height, "'", simplify = TRUE, n = 2)[,1]) %>%
mutate(inches_tall = str_split(height, "'", simplify = TRUE, n = 2)[,2]) %>%
mutate(height = (as.numeric(feet_tall) * 12) + as.numeric(inches_tall)) %>%
mutate(weight = str_split(weight, "lbs", simplify = TRUE, n = 2)[,1]) %>%
mutate(name_ = name) %>%
mutate(player_url_ = player_url) %>%
mutate_all(~str_trim(., side = "both")) %>%
mutate_all(~na_if(., "-")) %>%
select(-c(feet_tall, inches_tall, age, youth_team))
player_stats <- page %>%
html_node('[class="table table-striped table-condensed table-sortable player-stats highlight-stats"]') %>%
html_table() %>%
set_names("season_", "team_", "league_", "games_played_", "goals_", "assists_", "points_", "penalty_minutes_", "plus_minus_", "blank_", "playoffs_", "games_played_playoffs_", "goals_playoffs_", "assists_playoffs_", "points_playoffs_", "penalty_minutes_playoffs_", "plus_minus_playoffs_") %>%
as_tibble() %>%
mutate_all(~na_if(., "-")) %>%
mutate(season_ = replace(season_, season_ == "", NA)) %>%
fill(season_) %>%
mutate(season_short_ = as.numeric(str_split(season_, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(birthday = as_date(vitals[["birthday"]])) %>%
mutate(draft_eligibility_date_ = as_date(str_c(as.character(as.numeric(season_short_) - 1), "09-15", sep = "-"))) %>%
mutate(age_ = get_years_difference(birthday, draft_eligibility_date_)) %>%
mutate_all(as.character) %>%
select(-c(blank_, playoffs_, draft_eligibility_date_, birthday)) %>%
select(team_, league_, season_, season_short_, age_, games_played_, goals_, assists_, points_, penalty_minutes_, plus_minus_, games_played_playoffs_, goals_playoffs_, assists_playoffs_, points_playoffs_, penalty_minutes_playoffs_, plus_minus_playoffs_) %>%
nest()
all_data <- vitals %>%
bind_cols(player_stats) %>%
rename(player_statistics = data)
return(all_data)
})
mydata <- player_stats_individual %>%
bind_cols(...) %>%
mutate(season_short = as.numeric(str_split(season, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(draft_eligibility_date = as_date(str_c(as.character(as.numeric(season_short) - 1), "09-15", sep = "-"))) %>%
mutate(age = get_years_difference(as_date(birthday), draft_eligibility_date)) %>%
select(name, team, league, position, shot_handedness, birth_place, birth_country, birthday, height, weight, season, season_short, age, games_played, goals, assists, points, penalty_minutes, plus_minus, games_played_playoffs, goals_playoffs, assists_playoffs, points_playoffs, penalty_minutes_playoffs, plus_minus_playoffs, player_url, team_url, name_, position_, player_url_, player_statistics)
if (.strip_redundancy) {mydata <- mydata %>% select(-c(name_, position_, player_url_))}
return(mydata)
}
get_player_stats_team <- function(..., .progress = FALSE) {
if (.progress) {progress_bar <- progress_estimated(nrow(...), min_time = 0)}
player_stats_team <- pmap_dfr(..., function(team_url, team_name, league, season, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- team_url %>% read_html()
player_stats <- page %>%
html_node('[class="table table-striped table-sortable skater-stats highlight-stats"]') %>%
html_table() %>%
set_names("number", "name", "games_played", "goals", "assists", "points", "penalty_minutes", "plus_minus", "blank", "games_played_playoffs", "goals_playoffs", "assists_playoffs", "points_playoffs", "penalty_minutes_playoffs", "plus_minus_playoffs") %>%
as_tibble() %>%
filter(row_number() > 1) %>%
filter(row_number() < if_else(!any(is.na(number) & name != ""), n(), which(is.na(number) & name != "")[1])) %>%
filter(!is.na(number) & name != "") %>%
mutate(position = str_split(name, "\\(", simplify = TRUE, n = 2)[,2]) %>%
mutate(position = str_split(position, "\\)", simplify = TRUE, n = 2)[,1]) %>%
mutate(name = str_split(name, "\\(", simplify = TRUE, n = 2)[,1]) %>%
mutate_all(~na_if(., "-")) %>%
mutate_all(str_squish) %>%
select(-c(blank, number)) %>%
select(name, position, everything())
player_urls <- page %>%
html_nodes("tbody+ tbody .txt-blue a") %>%
html_attr("href") %>%
as_tibble() %>%
set_names("player_url") %>%
filter(row_number() < if_else(!any(!str_detect(player_url, "player")), n(), which(!str_detect(player_url, "player"))[1]))
all_data <- player_stats %>%
bind_cols(player_urls) %>%
mutate(team = team_name) %>%
mutate(league = league) %>%
mutate(season = season) %>%
mutate(team_url = team_url) %>%
select(name, team, league, season, everything())
return(all_data)
})
return(player_stats_team)
}
get_years_difference <- function(from, to) {
`:=` = function(...) NULL
.BY = NULL
x <- data.table::data.table(bday <- unclass(from),
rem = ((ref <- unclass(to)) - bday) %% 1461)
x[ , cycle_type :=
data.table::foverlaps(data.table::data.table(start = bdr <- bday %% 1461, end = bdr),
data.table::data.table(start = c(0, 59, 424, 790, 1155),
end = c(58, 423, 789, 1154, 1460),
val = c(3L, 2L, 1L, 4L, 3L),
key = "start,end"))$val]
I4 <- diag(4L)[ , -4L]
x[ , extra :=
data.table::foverlaps(data.table::data.table(start = rem, end = rem),
data.table::data.table(start = st <- cumsum(c(0, rep(365, 3L) +
I4[.BY[[1L]], ])),
end = c(st[-1L] - 1L, 1461),
int_yrs = c(0, 1, 2, 3), key = "start,end")
)[ , int_yrs + (i.start - start) / (end + 1L - start)], by = cycle_type]
4 * ((ref - bday) %/% 1461) + x$extra
}
wow <- get_league_team_data("ohl", "2017-2018") %>% filter(team == "London Knights") %>% get_player_stats_team() %>% slice(1:10) %>% get_player_stats_individual()
wow
wow %>% select(age)
wow %>% filter(age >= 18 & age < 19)
wow %>% filter(age >= 18 & age < 19) select(name)
wow %>% filter(age >= 18 & age < 19) %>% select(name)
wow %>% filter(age >= 18 & age < 19) %>% select(season_short)
wow %>% filter(age >= 18 & age < 19) %>% select(season_short) %>% mutate(wow = season_short - 1)
get_years_difference(as_date("1999-10-07"), as_date("2017-09-15"))
get_years_difference(as_date("1999-10-07"), as_date("2018-09-15"))
get_player_stats_individual <- function(..., .progress = TRUE, .strip_redundancy = TRUE) {
if (.progress) {progress_bar <- progress_estimated(nrow(...), min_time = 0)}
player_stats_individual <- pmap_dfr(..., function(player_url, name, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- player_url %>% read_html()
vitals <- page %>%
html_nodes('[class="col-xs-8 fac-lbl-dark"]') %>%
html_text() %>%
magrittr::extract(1:9) %>%
str_squish() %>%
set_names("birthday", "age", "birth_place", "birth_country", "youth_team", "position_", "height", "weight", "shot_handedness") %>%
t() %>%
as_tibble() %>%
mutate(birthday = mdy(birthday)) %>%
mutate(height = str_split(height, '"', simplify = TRUE, n = 2)[,1]) %>%
mutate(feet_tall = str_split(height, "'", simplify = TRUE, n = 2)[,1]) %>%
mutate(inches_tall = str_split(height, "'", simplify = TRUE, n = 2)[,2]) %>%
mutate(height = (as.numeric(feet_tall) * 12) + as.numeric(inches_tall)) %>%
mutate(weight = str_split(weight, "lbs", simplify = TRUE, n = 2)[,1]) %>%
mutate(name_ = name) %>%
mutate(player_url_ = player_url) %>%
mutate_all(~str_trim(., side = "both")) %>%
mutate_all(~na_if(., "-")) %>%
select(-c(feet_tall, inches_tall, age, youth_team))
player_stats <- page %>%
html_node('[class="table table-striped table-condensed table-sortable player-stats highlight-stats"]') %>%
html_table() %>%
set_names("season_", "team_", "league_", "games_played_", "goals_", "assists_", "points_", "penalty_minutes_", "plus_minus_", "blank_", "playoffs_", "games_played_playoffs_", "goals_playoffs_", "assists_playoffs_", "points_playoffs_", "penalty_minutes_playoffs_", "plus_minus_playoffs_") %>%
as_tibble() %>%
mutate_all(~na_if(., "-")) %>%
mutate(season_ = replace(season_, season_ == "", NA)) %>%
fill(season_) %>%
mutate(season_short_ = as.numeric(str_split(season_, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(birthday = as_date(vitals[["birthday"]])) %>%
mutate(draft_eligibility_date_ = as_date(str_c(as.character(season_short_), "09-15", sep = "-"))) %>%
mutate(age_ = get_years_difference(birthday, draft_eligibility_date_)) %>%
mutate_all(as.character) %>%
select(-c(blank_, playoffs_, draft_eligibility_date_, birthday)) %>%
select(team_, league_, season_, season_short_, age_, games_played_, goals_, assists_, points_, penalty_minutes_, plus_minus_, games_played_playoffs_, goals_playoffs_, assists_playoffs_, points_playoffs_, penalty_minutes_playoffs_, plus_minus_playoffs_) %>%
nest()
all_data <- vitals %>%
bind_cols(player_stats) %>%
rename(player_statistics = data)
return(all_data)
})
mydata <- player_stats_individual %>%
bind_cols(...) %>%
mutate(season_short = as.numeric(str_split(season, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(draft_eligibility_date = as_date(str_c(as.character(season_short), "09-15", sep = "-"))) %>%
mutate(age = get_years_difference(as_date(birthday), draft_eligibility_date)) %>%
select(name, team, league, position, shot_handedness, birth_place, birth_country, birthday, height, weight, season, season_short, age, games_played, goals, assists, points, penalty_minutes, plus_minus, games_played_playoffs, goals_playoffs, assists_playoffs, points_playoffs, penalty_minutes_playoffs, plus_minus_playoffs, player_url, team_url, name_, position_, player_url_, player_statistics)
if (.strip_redundancy) {mydata <- mydata %>% select(-c(name_, position_, player_url_))}
return(mydata)
}
get_player_stats_team <- function(..., .progress = FALSE) {
if (.progress) {progress_bar <- progress_estimated(nrow(...), min_time = 0)}
player_stats_team <- pmap_dfr(..., function(team_url, team_name, league, season, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- team_url %>% read_html()
player_stats <- page %>%
html_node('[class="table table-striped table-sortable skater-stats highlight-stats"]') %>%
html_table() %>%
set_names("number", "name", "games_played", "goals", "assists", "points", "penalty_minutes", "plus_minus", "blank", "games_played_playoffs", "goals_playoffs", "assists_playoffs", "points_playoffs", "penalty_minutes_playoffs", "plus_minus_playoffs") %>%
as_tibble() %>%
filter(row_number() > 1) %>%
filter(row_number() < if_else(!any(is.na(number) & name != ""), n(), which(is.na(number) & name != "")[1])) %>%
filter(!is.na(number) & name != "") %>%
mutate(position = str_split(name, "\\(", simplify = TRUE, n = 2)[,2]) %>%
mutate(position = str_split(position, "\\)", simplify = TRUE, n = 2)[,1]) %>%
mutate(name = str_split(name, "\\(", simplify = TRUE, n = 2)[,1]) %>%
mutate_all(~na_if(., "-")) %>%
mutate_all(str_squish) %>%
select(-c(blank, number)) %>%
select(name, position, everything())
player_urls <- page %>%
html_nodes("tbody+ tbody .txt-blue a") %>%
html_attr("href") %>%
as_tibble() %>%
set_names("player_url") %>%
filter(row_number() < if_else(!any(!str_detect(player_url, "player")), n(), which(!str_detect(player_url, "player"))[1]))
all_data <- player_stats %>%
bind_cols(player_urls) %>%
mutate(team = team_name) %>%
mutate(league = league) %>%
mutate(season = season) %>%
mutate(team_url = team_url) %>%
select(name, team, league, season, everything())
return(all_data)
})
return(player_stats_team)
}
get_years_difference <- function(from, to) {
`:=` = function(...) NULL
.BY = NULL
x <- data.table::data.table(bday <- unclass(from),
rem = ((ref <- unclass(to)) - bday) %% 1461)
x[ , cycle_type :=
data.table::foverlaps(data.table::data.table(start = bdr <- bday %% 1461, end = bdr),
data.table::data.table(start = c(0, 59, 424, 790, 1155),
end = c(58, 423, 789, 1154, 1460),
val = c(3L, 2L, 1L, 4L, 3L),
key = "start,end"))$val]
I4 <- diag(4L)[ , -4L]
x[ , extra :=
data.table::foverlaps(data.table::data.table(start = rem, end = rem),
data.table::data.table(start = st <- cumsum(c(0, rep(365, 3L) +
I4[.BY[[1L]], ])),
end = c(st[-1L] - 1L, 1461),
int_yrs = c(0, 1, 2, 3), key = "start,end")
)[ , int_yrs + (i.start - start) / (end + 1L - start)], by = cycle_type]
4 * ((ref - bday) %/% 1461) + x$extra
}
get_league_team_data <- function(.league, .season, .progress = FALSE, ...) {
leagues <- .league %>%
as_tibble() %>%
set_names(".league") %>%
mutate(.league = str_replace_all(.league, " ", "-"))
seasons <- .season %>%
as_tibble() %>%
set_names(".season")
mydata <- tidyr::crossing(leagues, seasons)
if (.progress) {progress_bar <- progress_estimated(nrow(mydata), min_time = 0)}
league_team_data <- map2_dfr(mydata[[".league"]], mydata[[".season"]], function(.league, .season, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- str_c("https://www.eliteprospects.com/league/", .league, "/", .season) %>% read_html()
team_url <- page %>%
html_nodes("#standings .team a") %>%
html_attr("href") %>%
str_c(., "?tab=stats") %>%
as_tibble() %>%
set_names("team_url")
team <- page %>%
html_nodes("#standings .team a") %>%
html_text() %>%
str_trim(side = "both") %>%
as_tibble() %>%
set_names("team")
league <- page %>%
html_nodes("small") %>%
html_text() %>%
str_trim(side = "both")
season <- str_split(.season, "-", simplify = TRUE, n = 2)[,2] %>%
str_sub(3, 4) %>%
str_c(str_split(.season, "-", simplify = TRUE, n = 2)[,1], ., sep = "-")
all_data <- team %>%
bind_cols(team_url) %>%
mutate(league = league) %>%
mutate(season = season)
return(all_data)
})
return(league_team_data)
}
get_player_stats_individual <- function(..., .progress = TRUE, .strip_redundancy = TRUE) {
if (.progress) {progress_bar <- progress_estimated(nrow(...), min_time = 0)}
player_stats_individual <- pmap_dfr(..., function(player_url, name, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- player_url %>% read_html()
vitals <- page %>%
html_nodes('[class="col-xs-8 fac-lbl-dark"]') %>%
html_text() %>%
magrittr::extract(1:9) %>%
str_squish() %>%
set_names("birthday", "age", "birth_place", "birth_country", "youth_team", "position_", "height", "weight", "shot_handedness") %>%
t() %>%
as_tibble() %>%
mutate(birthday = mdy(birthday)) %>%
mutate(height = str_split(height, '"', simplify = TRUE, n = 2)[,1]) %>%
mutate(feet_tall = str_split(height, "'", simplify = TRUE, n = 2)[,1]) %>%
mutate(inches_tall = str_split(height, "'", simplify = TRUE, n = 2)[,2]) %>%
mutate(height = (as.numeric(feet_tall) * 12) + as.numeric(inches_tall)) %>%
mutate(weight = str_split(weight, "lbs", simplify = TRUE, n = 2)[,1]) %>%
mutate(name_ = name) %>%
mutate(player_url_ = player_url) %>%
mutate_all(~str_trim(., side = "both")) %>%
mutate_all(~na_if(., "-")) %>%
select(-c(feet_tall, inches_tall, age, youth_team))
player_stats <- page %>%
html_node('[class="table table-striped table-condensed table-sortable player-stats highlight-stats"]') %>%
html_table() %>%
set_names("season_", "team_", "league_", "games_played_", "goals_", "assists_", "points_", "penalty_minutes_", "plus_minus_", "blank_", "playoffs_", "games_played_playoffs_", "goals_playoffs_", "assists_playoffs_", "points_playoffs_", "penalty_minutes_playoffs_", "plus_minus_playoffs_") %>%
as_tibble() %>%
mutate_all(~na_if(., "-")) %>%
mutate(season_ = replace(season_, season_ == "", NA)) %>%
fill(season_) %>%
mutate(season_short_ = as.numeric(str_split(season_, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(birthday = as_date(vitals[["birthday"]])) %>%
mutate(draft_eligibility_date_ = as_date(str_c(as.character(season_short_), "09-15", sep = "-"))) %>%
mutate(age_ = get_years_difference(birthday, draft_eligibility_date_)) %>%
mutate_all(as.character) %>%
select(-c(blank_, playoffs_, draft_eligibility_date_, birthday)) %>%
select(team_, league_, season_, season_short_, age_, games_played_, goals_, assists_, points_, penalty_minutes_, plus_minus_, games_played_playoffs_, goals_playoffs_, assists_playoffs_, points_playoffs_, penalty_minutes_playoffs_, plus_minus_playoffs_) %>%
nest()
all_data <- vitals %>%
bind_cols(player_stats) %>%
rename(player_statistics = data)
return(all_data)
})
mydata <- player_stats_individual %>%
bind_cols(...) %>%
mutate(season_short = as.numeric(str_split(season, "-", simplify = TRUE, n = 2)[,1]) + 1) %>%
mutate(draft_eligibility_date = as_date(str_c(as.character(season_short), "09-15", sep = "-"))) %>%
mutate(age = get_years_difference(as_date(birthday), draft_eligibility_date)) %>%
select(name, team, league, position, shot_handedness, birth_place, birth_country, birthday, height, weight, season, season_short, age, games_played, goals, assists, points, penalty_minutes, plus_minus, games_played_playoffs, goals_playoffs, assists_playoffs, points_playoffs, penalty_minutes_playoffs, plus_minus_playoffs, player_url, team_url, name_, position_, player_url_, player_statistics)
if (.strip_redundancy) {mydata <- mydata %>% select(-c(name_, position_, player_url_))}
return(mydata)
}
get_player_stats_team <- function(..., .progress = FALSE) {
if (.progress) {progress_bar <- progress_estimated(nrow(...), min_time = 0)}
player_stats_team <- pmap_dfr(..., function(team_url, team_name, league, season, ...) {
if (.progress) {progress_bar$tick()$print()}
seq(5, 10, by = 0.001) %>%
sample(1) %>%
Sys.sleep()
page <- team_url %>% read_html()
player_stats <- page %>%
html_node('[class="table table-striped table-sortable skater-stats highlight-stats"]') %>%
html_table() %>%
set_names("number", "name", "games_played", "goals", "assists", "points", "penalty_minutes", "plus_minus", "blank", "games_played_playoffs", "goals_playoffs", "assists_playoffs", "points_playoffs", "penalty_minutes_playoffs", "plus_minus_playoffs") %>%
as_tibble() %>%
filter(row_number() > 1) %>%
filter(row_number() < if_else(!any(is.na(number) & name != ""), n(), which(is.na(number) & name != "")[1])) %>%
filter(!is.na(number) & name != "") %>%
mutate(position = str_split(name, "\\(", simplify = TRUE, n = 2)[,2]) %>%
mutate(position = str_split(position, "\\)", simplify = TRUE, n = 2)[,1]) %>%
mutate(name = str_split(name, "\\(", simplify = TRUE, n = 2)[,1]) %>%
mutate_all(~na_if(., "-")) %>%
mutate_all(str_squish) %>%
select(-c(blank, number)) %>%
select(name, position, everything())
player_urls <- page %>%
html_nodes("tbody+ tbody .txt-blue a") %>%
html_attr("href") %>%
as_tibble() %>%
set_names("player_url") %>%
filter(row_number() < if_else(!any(!str_detect(player_url, "player")), n(), which(!str_detect(player_url, "player"))[1]))
all_data <- player_stats %>%
bind_cols(player_urls) %>%
mutate(team = team_name) %>%
mutate(league = league) %>%
mutate(season = season) %>%
mutate(team_url = team_url) %>%
select(name, team, league, season, everything())
return(all_data)
})
return(player_stats_team)
}
get_years_difference <- function(from, to) {
`:=` = function(...) NULL
.BY = NULL
x <- data.table::data.table(bday <- unclass(from),
rem = ((ref <- unclass(to)) - bday) %% 1461)
x[ , cycle_type :=
data.table::foverlaps(data.table::data.table(start = bdr <- bday %% 1461, end = bdr),
data.table::data.table(start = c(0, 59, 424, 790, 1155),
end = c(58, 423, 789, 1154, 1460),
val = c(3L, 2L, 1L, 4L, 3L),
key = "start,end"))$val]
I4 <- diag(4L)[ , -4L]
x[ , extra :=
data.table::foverlaps(data.table::data.table(start = rem, end = rem),
data.table::data.table(start = st <- cumsum(c(0, rep(365, 3L) +
I4[.BY[[1L]], ])),
end = c(st[-1L] - 1L, 1461),
int_yrs = c(0, 1, 2, 3), key = "start,end")
)[ , int_yrs + (i.start - start) / (end + 1L - start)], by = cycle_type]
4 * ((ref - bday) %/% 1461) + x$extra
}
wow
rm(wow)
.Last.value
wow
rm(list=ls())
library(roxygen2)
library(devtools)
setwd("./elite")
wd
getwd()
document()
traceback()
reprex::reprex()
document()
traceback()
devtools::install_github("r-lib/devtools")
devtools::install_github("r-lib/devtools")
devtools::install_github("r-lib/devtools")
install.packages("processx")
devtools::install_github("r-lib/devtools")
install.packages("rlang")
devtools::install_github("r-lib/devtools")
library(devtools)
library(roxygen2)
setwd("./elite")
getwd()
document()
